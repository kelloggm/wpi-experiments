package org.cache2k;

/*-
 * #%L
 * cache2k API
 * %%
 * Copyright (C) 2000 - 2022 headissue GmbH, Munich
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

/**
 * Base class of all cache exceptions.
 *
 * @author Jens Wilke
 */
@org.checkerframework.framework.qual.AnnotatedFor(
    "org.checkerframework.checker.nullness.NullnessChecker")
public class CacheException extends RuntimeException {

  protected CacheException(
      @org.checkerframework.checker.initialization.qual.FBCBottom
          @org.checkerframework.checker.nullness.qual.Nullable
          String message,
      @org.checkerframework.checker.initialization.qual.FBCBottom
          @org.checkerframework.checker.nullness.qual.Nullable
          Throwable cause,
      @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull
          boolean enableSuppression,
      @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull
          boolean writableStackTrace) {
    super(message, cause, enableSuppression, writableStackTrace);
  }

  @org.checkerframework.dataflow.qual.SideEffectFree
  public CacheException() {}

  @org.checkerframework.dataflow.qual.SideEffectFree
  public CacheException(
      @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull
          String message) {
    super(message);
  }

  @org.checkerframework.dataflow.qual.SideEffectFree
  public CacheException(
      @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull
          String message,
      @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull
          Throwable cause) {
    super(message, cause);
  }

  @org.checkerframework.dataflow.qual.SideEffectFree
  public CacheException(
      @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull
          Throwable cause) {
    super(cause);
  }
}
